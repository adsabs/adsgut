// Generated by CoffeeScript 1.3.3
(function() {
  var $;

  $ = jQuery;

  $(function() {
    var Manager, autocomplete_fields, dauser, fields, i, max_numericfields, min_numericfields, name, numeric_fields, params, step_numericfields, _i, _ref;
    Manager = new AjaxSolr.Manager({
      solrUrl: 'http://localhost:8983/solr/'
    });
    fields = ['author_facet', 'keyword_facet'];
    numeric_fields = [];
    autocomplete_fields = ['author_facet', 'keyword_facet'];
    min_numericfields = [];
    max_numericfields = [];
    step_numericfields = [];
    Manager.addWidget(new AjaxSolr.ResultWidget({
      id: 'result',
      target: '#docs'
    }));
    Manager.addWidget(new AjaxSolr.PagerWidget({
      id: 'pager',
      target: '#pager',
      separator: '',
      prevLabel: '&lt;',
      nextLabel: '&gt;',
      innerWindow: 1,
      renderHeader: function(perPage, offset, total) {
        return $('#pager-header').html($('<span/>').text('displaying ' + Math.min(total, offset + 1) + ' to ' + Math.min(total, offset + perPage) + ' of ' + total));
      }
    }));
    Manager.addWidget(new AjaxSolr.CurrentSearchWidget({
      id: 'currentsearch',
      target: '#selection'
    }));
    for (i = _i = 0, _ref = fields.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      Manager.addWidget(new AjaxSolr.TagcloudWidget({
        id: fields[i],
        target: '#' + fields[i],
        field: fields[i]
      }));
    }
    Manager.addWidget(new AjaxSolr.AutocompleteWidget({
      id: 'text',
      target: '#search',
      field: 'text',
      fields: autocomplete_fields
    }));
    Manager.setStore(new AjaxSolr.ExtHashStore());
    Manager.store.exposed = ['fq', 'q'];
    Manager.init();
    Manager.store.addByValue('q', '*:*');
    params = {
      facet: true,
      'facet.field': _.union(fields, numeric_fields),
      'facet.limit': 20,
      'rows': 0,
      'facet.mincount': 1,
      'json.nl': 'map',
      'stats': 'true',
      'stats.field': numeric_fields
    };
    for (name in params) {
      Manager.store.addByValue(name, params[name]);
    }
    console.log("Setting up Event handlers");
    dauser = $('#user').attr('user');
    $('#docs').delegate("button.saver", "click", function() {
      var bdict,
        _this = this;
      bdict = {
        'itemtype': $(this).attr('itemtype'),
        'uri': $(this).attr('uri'),
        'name': $(this).attr('name')
      };
      console.log(dauser, bdict);
      $.post("/items/" + dauser, bdict, function(data) {
        console.log('data is', data);
        if (data['status'] === 'OK') {
          return $(_this).hide();
        }
      });
      return false;
    });
    $('#docs').delegate("button.noteadder", "click", function() {
      return false;
    });
    return Manager.doRequest();
  });

  $.fn.showIf = function(condition) {
    if (condition) {
      return this.show();
    } else {
      return this.hide();
    }
  };

}).call(this);
